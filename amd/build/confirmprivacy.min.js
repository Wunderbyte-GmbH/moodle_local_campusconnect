define("local_campusconnect/confirmprivacy",["exports","core_form/modalform","core/str"],(function(_exports,_modalform,_str){var obj;
/**
   * AJAX helper for the inline editing a value.
   *
   * This script is automatically included from template core/inplace_editable
   * It registers a click-listener on [data-inplaceeditablelink] link (the "inplace edit" icon),
   * then replaces the displayed value with an input field. On "Enter" it sends a request
   * to web service core_update_inplace_editable, which invokes the specified callback.
   * Any exception thrown by the web service (or callback) is displayed as an error popup.
   *
   * @module     local_campusconnect/confirmprivacy
   * @copyright  2024 Georg MaiÃŸer
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @since      3.3
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modalform=(obj=_modalform)&&obj.__esModule?obj:{default:obj};_exports.init=(courseid,returnurl)=>{!function(courseid,returnurl){const modalForm=new _modalform.default({formClass:"local_campusconnect\\form\\modal_confirmprivacy",args:{courseid:courseid,returnurl:returnurl},modalConfig:{title:(0,_str.get_string)("confirmprivacytitle","local_campusconnect")}});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(e=>{if(console.log(e.detail),e.detail.returnurl){var url=new URL(e.detail.returnurl);url.searchParams.append("privacyread",1),window.location.href=url}})),modalForm.show()}(courseid,returnurl)}}));

//# sourceMappingURL=confirmprivacy.min.js.map